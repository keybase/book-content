{#
        aurl   = "#{url_base}_/api/1.0/"

        print partial '../../call_item.toffee',

          title:  'user/lookup'
          title:  'user/lookup'
          method: 'GET'
          cors_support: true
          suffix: """
            <h4>When users cannot be found</h4>
            <p>
              If you pass a comma-separated usernames parameter with N names, you will get back a matching N-sized array, but with <code>null</code> for any users who could not be found. We imagine this is easier to deal with.
            </p>
            <p>
              For external identities, such as domains, this API only supports passing one lookup item at a time (no comma-separated list), but the returning result is still an array. Why?  Well, multiple people may prove ownership of a domain, and possibly other search fields. See <a href="https://keybase.io/_/api/1.0/user/lookup.json?domain=keybase.io&fields=basics">https://keybase.io/_/api/1.0/user/lookup.json?domain=keybase.io&fields=basics</a> as an example. Unlike a usernames lookup, this resulting array cannot have any <code>null</code> values in it. It will only return legitimate matches, and therefore its length could be 0, 1, or more.
            </p>

            <h4>User objects are massive</h4>
            <p>
              The above example is a pretty small result.
              A user object is a large dictionary and could contain pretty much
              everything about a user that you have access to. (See the <a href="../../user_objects">user objects</a> page in the documentation for more info.)
            </p>
            <p>
              To avoid getting more data than you need, you can (should!) specify a comma-separated list of fields you desire. Acceptable values are:
            </p>
            <ul>
              <li>pictures</li>
              <li>basics</li>
              <li>public_keys</li>
              <li>profile</li>
              <li>proofs_summary</li>
              <li>remote_key_proofs</li>
              <li>sigs</li>
              <li>cryptocurrency_addresses <span class="label label-success">New</span></li>
            </ul>

            <h4>CORS</h4>
            <p>
              Also note that this API call, along with both <b>user/autocomplete</b>
              and <b>username/pgp_keys.asc</b> is available via AJAX using CORS. Combining the
              three, you can search Keybase from any page on the web, present results
              to a viewer, and let them encrypt or verify.
            </p>
          """
          sample_urls: """
                #{aurl}user/lookup.json?usernames=chris,max
                #{aurl}user/lookup.json?usernames=fake_user1,fake_user2 # nulls come back
                #{aurl}user/lookup.json?domain=chriscoyne.com
                #{aurl}user/lookup.json?twitter=malgorithms
                #{aurl}user/lookup.json?github=malgorithms
                #{aurl}user/lookup.json?reddit=malgorithms
                #{aurl}user/lookup.json?hackernews=malgorithms
                #{aurl}user/lookup.json?github=malgorithms&fields=basics,public_keys
                #{aurl}user/lookup.json?key_fingerprint=94aa3a5bdbd40ea549cabaf9fbc07d6a97016cb3
          """
          sample_output: """
            // note that `them` is an array because certain lookups
            // such as `domain` and `usernames` (which itself can be a list)
            // can produce multiple results
            {
              "status": {
                "code": 0,
                "name": "OK"
              },
              "them": [{
                "id": "9a2c8a8ac48162723c7992570c87da00",
                "basics": {
                  "username": "maxtaco",
                  "ctime": 1399919269,
                  "mtime": 1399919269,
                  "id_version": 5,
                  "track_version": 1,
                  "last_id_change": 1399919279
                },
                "pictures": {
                  "primary": {
                    "url": "https://s3.amazonaws.com/ke..._square_200.png",
                    "width": 200,
                    "height": 200
                  }
                },
                "public_keys": {
                  "primary": {
                    "key_fingerprint": "e53878dbb0e644cff5f10e20fa9930221099dd13",
                    "kid": "0101995d003...",
                    "key_type": 1,
                    "bundle": "-----BEGIN PGP PUBLIC KEY.../*cropped for display*/",
                    "mtime": 1400074240,
                    "ctime": 1400074240,
                    "ukbid": "4f8bc40c19626b015308fcb9ef8c5811",
                  }
                }
              }],
              "csrf_token": "lgHZIDQ1NTU0ODE3NzY5ZmM5N..."
            }
          """
#}
